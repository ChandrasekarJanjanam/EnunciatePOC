<?php

/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */
 

  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Claim.
     */
    class Claim  {
    
    
      /**
       * the claimId
       */
      private $claimId;
      /**
       * the claimDescription
       */
      private $claimDescription;

      /**
       * Constructs a Claim from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the claimId
       */
      public function getClaimId() {
        return $this->claimId;
      }
      
      /**
       * the claimId
       */
      public function setClaimId($claimId) {
        $this->claimId = $claimId;
      }
      /**
       * the claimDescription
       */
      public function getClaimDescription() {
        return $this->claimDescription;
      }
      
      /**
       * the claimDescription
       */
      public function setClaimDescription($claimDescription) {
        $this->claimDescription = $claimDescription;
      }
      /**
       * Returns the associative array for this Claim
       */
      public function toArray() {
        $a = array();
        if( $this->claimId ) {
          $a["claimId"] = $this->claimId;
        }
        if( $this->claimDescription ) {
          $a["claimDescription"] = $this->claimDescription;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Claim
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Claim from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['claimId']) ) {
          $this->claimId = $o["claimId"];
        }
        if( isset($o['claimDescription']) ) {
          $this->claimDescription = $o["claimDescription"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Driver.
     */
    class Driver  {
    
    
      /**
       * the driverId
       */
      private $driverId;
      /**
       * the driverName
       */
      private $driverName;
      /**
       * the gender
       */
      private $gender;
      /**
       * the driverPhoto
       */
      private $driverPhoto;
      /**
       * the dateOfBirth
       */
      private $dateOfBirth;
      /**
       * the driverLicenseNumber
       */
      private $driverLicenseNumber;
      /**
       * the driverClass
       */
      private $driverClass;
      /**
       * the address
       */
      private $address;
      /**
       * the eyeColor
       */
      private $eyeColor;
      /**
       * the height
       */
      private $height;
      /**
       * the dateOfIssue
       */
      private $dateOfIssue;
      /**
       * the expiryDate
       */
      private $expiryDate;
      /**
       * the licensePhoto
       */
      private $licensePhoto;

      /**
       * Constructs a Driver from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the driverId
       */
      public function getDriverId() {
        return $this->driverId;
      }
      
      /**
       * the driverId
       */
      public function setDriverId($driverId) {
        $this->driverId = $driverId;
      }
      /**
       * the driverName
       */
      public function getDriverName() {
        return $this->driverName;
      }
      
      /**
       * the driverName
       */
      public function setDriverName($driverName) {
        $this->driverName = $driverName;
      }
      /**
       * the gender
       */
      public function getGender() {
        return $this->gender;
      }
      
      /**
       * the gender
       */
      public function setGender($gender) {
        $this->gender = $gender;
      }
      /**
       * the driverPhoto
       */
      public function getDriverPhoto() {
        return $this->driverPhoto;
      }
      
      /**
       * the driverPhoto
       */
      public function setDriverPhoto($driverPhoto) {
        $this->driverPhoto = $driverPhoto;
      }
      /**
       * the dateOfBirth
       */
      public function getDateOfBirth() {
        return $this->dateOfBirth;
      }
      
      /**
       * the dateOfBirth
       */
      public function setDateOfBirth($dateOfBirth) {
        $this->dateOfBirth = $dateOfBirth;
      }
      /**
       * the driverLicenseNumber
       */
      public function getDriverLicenseNumber() {
        return $this->driverLicenseNumber;
      }
      
      /**
       * the driverLicenseNumber
       */
      public function setDriverLicenseNumber($driverLicenseNumber) {
        $this->driverLicenseNumber = $driverLicenseNumber;
      }
      /**
       * the driverClass
       */
      public function getDriverClass() {
        return $this->driverClass;
      }
      
      /**
       * the driverClass
       */
      public function setDriverClass($driverClass) {
        $this->driverClass = $driverClass;
      }
      /**
       * the address
       */
      public function getAddress() {
        return $this->address;
      }
      
      /**
       * the address
       */
      public function setAddress($address) {
        $this->address = $address;
      }
      /**
       * the eyeColor
       */
      public function getEyeColor() {
        return $this->eyeColor;
      }
      
      /**
       * the eyeColor
       */
      public function setEyeColor($eyeColor) {
        $this->eyeColor = $eyeColor;
      }
      /**
       * the height
       */
      public function getHeight() {
        return $this->height;
      }
      
      /**
       * the height
       */
      public function setHeight($height) {
        $this->height = $height;
      }
      /**
       * the dateOfIssue
       */
      public function getDateOfIssue() {
        return $this->dateOfIssue;
      }
      
      /**
       * the dateOfIssue
       */
      public function setDateOfIssue($dateOfIssue) {
        $this->dateOfIssue = $dateOfIssue;
      }
      /**
       * the expiryDate
       */
      public function getExpiryDate() {
        return $this->expiryDate;
      }
      
      /**
       * the expiryDate
       */
      public function setExpiryDate($expiryDate) {
        $this->expiryDate = $expiryDate;
      }
      /**
       * the licensePhoto
       */
      public function getLicensePhoto() {
        return $this->licensePhoto;
      }
      
      /**
       * the licensePhoto
       */
      public function setLicensePhoto($licensePhoto) {
        $this->licensePhoto = $licensePhoto;
      }
      /**
       * Returns the associative array for this Driver
       */
      public function toArray() {
        $a = array();
        if( $this->driverId ) {
          $a["driverId"] = $this->driverId;
        }
        if( $this->driverName ) {
          $a["driverName"] = $this->driverName;
        }
        if( $this->gender ) {
          $a["gender"] = $this->gender;
        }
        if( $this->driverPhoto ) {
          $a["driverPhoto"] = $this->driverPhoto;
        }
        if( $this->dateOfBirth ) {
          $a["dateOfBirth"] = $this->dateOfBirth;
        }
        if( $this->driverLicenseNumber ) {
          $a["driverLicenseNumber"] = $this->driverLicenseNumber;
        }
        if( $this->driverClass ) {
          $a["driverClass"] = $this->driverClass;
        }
        if( $this->address ) {
          $a["address"] = $this->address;
        }
        if( $this->eyeColor ) {
          $a["eyeColor"] = $this->eyeColor;
        }
        if( $this->height ) {
          $a["height"] = $this->height;
        }
        if( $this->dateOfIssue ) {
          $a["dateOfIssue"] = $this->dateOfIssue;
        }
        if( $this->expiryDate ) {
          $a["expiryDate"] = $this->expiryDate;
        }
        if( $this->licensePhoto ) {
          $a["licensePhoto"] = $this->licensePhoto;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Driver
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Driver from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['driverId']) ) {
          $this->driverId = $o["driverId"];
        }
        if( isset($o['driverName']) ) {
          $this->driverName = $o["driverName"];
        }
        if( isset($o['gender']) ) {
          $this->gender = $o["gender"];
        }
        if( isset($o['driverPhoto']) ) {
          $this->driverPhoto = $o["driverPhoto"];
        }
        if( isset($o['dateOfBirth']) ) {
          $this->dateOfBirth = $o["dateOfBirth"];
        }
        if( isset($o['driverLicenseNumber']) ) {
          $this->driverLicenseNumber = $o["driverLicenseNumber"];
        }
        if( isset($o['driverClass']) ) {
          $this->driverClass = $o["driverClass"];
        }
        if( isset($o['address']) ) {
          $this->address = $o["address"];
        }
        if( isset($o['eyeColor']) ) {
          $this->eyeColor = $o["eyeColor"];
        }
        if( isset($o['height']) ) {
          $this->height = $o["height"];
        }
        if( isset($o['dateOfIssue']) ) {
          $this->dateOfIssue = $o["dateOfIssue"];
        }
        if( isset($o['expiryDate']) ) {
          $this->expiryDate = $o["expiryDate"];
        }
        if( isset($o['licensePhoto']) ) {
          $this->licensePhoto = $o["licensePhoto"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class IdCardDetails.
     */
    class IdCardDetails  {
    
    
      /**
       * the vehicle
       */
      private $vehicle;
      /**
       * the policy
       */
      private $policy;
      /**
       * the insuredPersons
       */
      private $insuredPersons;

      /**
       * Constructs a IdCardDetails from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the vehicle
       */
      public function getVehicle() {
        return $this->vehicle;
      }
      
      /**
       * the vehicle
       */
      public function setVehicle($vehicle) {
        $this->vehicle = $vehicle;
      }
      /**
       * the policy
       */
      public function getPolicy() {
        return $this->policy;
      }
      
      /**
       * the policy
       */
      public function setPolicy($policy) {
        $this->policy = $policy;
      }
      /**
       * the insuredPersons
       */
      public function getInsuredPersons() {
        return $this->insuredPersons;
      }
      
      /**
       * the insuredPersons
       */
      public function setInsuredPersons($insuredPersons) {
        $this->insuredPersons = $insuredPersons;
      }
      /**
       * Returns the associative array for this IdCardDetails
       */
      public function toArray() {
        $a = array();
        if( $this->vehicle ) {
          $a["vehicle"] = $this->vehicle->toArray();
        }
        if( $this->policy ) {
          $a["policy"] = $this->policy->toArray();
        }
        if( $this->insuredPersons ) {
          $ab = array();
          foreach( $this->insuredPersons as $i => $x ) {
            $ab[$i] = $x;
          }
          $a['insuredPersons'] = $ab;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this IdCardDetails
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this IdCardDetails from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['vehicle']) ) {
          $this->vehicle = new \Com\Ibm\Openinsurance\Domain\Vehicle($o["vehicle"]);
        }
        if( isset($o['policy']) ) {
          $this->policy = new \Com\Ibm\Openinsurance\Domain\Policy($o["policy"]);
        }
        $this->insuredPersons = array();
        if( isset($o['insuredPersons']) ) {
          foreach( $o['insuredPersons'] as $i => $x ) {
            $this->insuredPersons[$i] = $x;
          }
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Payment.
     */
    class Payment  {
    
    
      /**
       * the paymentId
       */
      private $paymentId;
      /**
       * the policyId
       */
      private $policyId;
      /**
       * the paymentAmount
       */
      private $paymentAmount;
      /**
       * the paymentType
       */
      private $paymentType;
      /**
       * the paymentDate
       */
      private $paymentDate;
      /**
       * the routingNumber
       */
      private $routingNumber;
      /**
       * the checkingAccountNumber
       */
      private $checkingAccountNumber;
      /**
       * the checkPhotograph
       */
      private $checkPhotograph;
      /**
       * the creditCardNumber
       */
      private $creditCardNumber;
      /**
       * the creditCardName
       */
      private $creditCardName;
      /**
       * the cVSCode
       */
      private $CVSCode;
      /**
       * the creditCardExpiryDate
       */
      private $creditCardExpiryDate;
      /**
       * the debitCardNumber
       */
      private $debitCardNumber;
      /**
       * the debitCardName
       */
      private $debitCardName;
      /**
       * the debitCardPin
       */
      private $debitCardPin;
      /**
       * the debitCardExpiryDate
       */
      private $debitCardExpiryDate;

      /**
       * Constructs a Payment from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the paymentId
       */
      public function getPaymentId() {
        return $this->paymentId;
      }
      
      /**
       * the paymentId
       */
      public function setPaymentId($paymentId) {
        $this->paymentId = $paymentId;
      }
      /**
       * the policyId
       */
      public function getPolicyId() {
        return $this->policyId;
      }
      
      /**
       * the policyId
       */
      public function setPolicyId($policyId) {
        $this->policyId = $policyId;
      }
      /**
       * the paymentAmount
       */
      public function getPaymentAmount() {
        return $this->paymentAmount;
      }
      
      /**
       * the paymentAmount
       */
      public function setPaymentAmount($paymentAmount) {
        $this->paymentAmount = $paymentAmount;
      }
      /**
       * the paymentType
       */
      public function getPaymentType() {
        return $this->paymentType;
      }
      
      /**
       * the paymentType
       */
      public function setPaymentType($paymentType) {
        $this->paymentType = $paymentType;
      }
      /**
       * the paymentDate
       */
      public function getPaymentDate() {
        return $this->paymentDate;
      }
      
      /**
       * the paymentDate
       */
      public function setPaymentDate($paymentDate) {
        $this->paymentDate = $paymentDate;
      }
      /**
       * the routingNumber
       */
      public function getRoutingNumber() {
        return $this->routingNumber;
      }
      
      /**
       * the routingNumber
       */
      public function setRoutingNumber($routingNumber) {
        $this->routingNumber = $routingNumber;
      }
      /**
       * the checkingAccountNumber
       */
      public function getCheckingAccountNumber() {
        return $this->checkingAccountNumber;
      }
      
      /**
       * the checkingAccountNumber
       */
      public function setCheckingAccountNumber($checkingAccountNumber) {
        $this->checkingAccountNumber = $checkingAccountNumber;
      }
      /**
       * the checkPhotograph
       */
      public function getCheckPhotograph() {
        return $this->checkPhotograph;
      }
      
      /**
       * the checkPhotograph
       */
      public function setCheckPhotograph($checkPhotograph) {
        $this->checkPhotograph = $checkPhotograph;
      }
      /**
       * the creditCardNumber
       */
      public function getCreditCardNumber() {
        return $this->creditCardNumber;
      }
      
      /**
       * the creditCardNumber
       */
      public function setCreditCardNumber($creditCardNumber) {
        $this->creditCardNumber = $creditCardNumber;
      }
      /**
       * the creditCardName
       */
      public function getCreditCardName() {
        return $this->creditCardName;
      }
      
      /**
       * the creditCardName
       */
      public function setCreditCardName($creditCardName) {
        $this->creditCardName = $creditCardName;
      }
      /**
       * the cVSCode
       */
      public function getCVSCode() {
        return $this->CVSCode;
      }
      
      /**
       * the cVSCode
       */
      public function setCVSCode($CVSCode) {
        $this->CVSCode = $CVSCode;
      }
      /**
       * the creditCardExpiryDate
       */
      public function getCreditCardExpiryDate() {
        return $this->creditCardExpiryDate;
      }
      
      /**
       * the creditCardExpiryDate
       */
      public function setCreditCardExpiryDate($creditCardExpiryDate) {
        $this->creditCardExpiryDate = $creditCardExpiryDate;
      }
      /**
       * the debitCardNumber
       */
      public function getDebitCardNumber() {
        return $this->debitCardNumber;
      }
      
      /**
       * the debitCardNumber
       */
      public function setDebitCardNumber($debitCardNumber) {
        $this->debitCardNumber = $debitCardNumber;
      }
      /**
       * the debitCardName
       */
      public function getDebitCardName() {
        return $this->debitCardName;
      }
      
      /**
       * the debitCardName
       */
      public function setDebitCardName($debitCardName) {
        $this->debitCardName = $debitCardName;
      }
      /**
       * the debitCardPin
       */
      public function getDebitCardPin() {
        return $this->debitCardPin;
      }
      
      /**
       * the debitCardPin
       */
      public function setDebitCardPin($debitCardPin) {
        $this->debitCardPin = $debitCardPin;
      }
      /**
       * the debitCardExpiryDate
       */
      public function getDebitCardExpiryDate() {
        return $this->debitCardExpiryDate;
      }
      
      /**
       * the debitCardExpiryDate
       */
      public function setDebitCardExpiryDate($debitCardExpiryDate) {
        $this->debitCardExpiryDate = $debitCardExpiryDate;
      }
      /**
       * Returns the associative array for this Payment
       */
      public function toArray() {
        $a = array();
        if( $this->paymentId ) {
          $a["paymentId"] = $this->paymentId;
        }
        if( $this->policyId ) {
          $a["policyId"] = $this->policyId;
        }
        if( $this->paymentAmount ) {
          $a["paymentAmount"] = $this->paymentAmount;
        }
        if( $this->paymentType ) {
          $a["paymentType"] = $this->paymentType;
        }
        if( $this->paymentDate ) {
          $a["paymentDate"] = $this->paymentDate;
        }
        if( $this->routingNumber ) {
          $a["routingNumber"] = $this->routingNumber;
        }
        if( $this->checkingAccountNumber ) {
          $a["checkingAccountNumber"] = $this->checkingAccountNumber;
        }
        if( $this->checkPhotograph ) {
          $a["checkPhotograph"] = $this->checkPhotograph;
        }
        if( $this->creditCardNumber ) {
          $a["creditCardNumber"] = $this->creditCardNumber;
        }
        if( $this->creditCardName ) {
          $a["creditCardName"] = $this->creditCardName;
        }
        if( $this->CVSCode ) {
          $a["CVSCode"] = $this->CVSCode;
        }
        if( $this->creditCardExpiryDate ) {
          $a["creditCardExpiryDate"] = $this->creditCardExpiryDate;
        }
        if( $this->debitCardNumber ) {
          $a["debitCardNumber"] = $this->debitCardNumber;
        }
        if( $this->debitCardName ) {
          $a["debitCardName"] = $this->debitCardName;
        }
        if( $this->debitCardPin ) {
          $a["debitCardPin"] = $this->debitCardPin;
        }
        if( $this->debitCardExpiryDate ) {
          $a["debitCardExpiryDate"] = $this->debitCardExpiryDate;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Payment
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Payment from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['paymentId']) ) {
          $this->paymentId = $o["paymentId"];
        }
        if( isset($o['policyId']) ) {
          $this->policyId = $o["policyId"];
        }
        if( isset($o['paymentAmount']) ) {
          $this->paymentAmount = $o["paymentAmount"];
        }
        if( isset($o['paymentType']) ) {
          $this->paymentType = $o["paymentType"];
        }
        if( isset($o['paymentDate']) ) {
          $this->paymentDate = $o["paymentDate"];
        }
        if( isset($o['routingNumber']) ) {
          $this->routingNumber = $o["routingNumber"];
        }
        if( isset($o['checkingAccountNumber']) ) {
          $this->checkingAccountNumber = $o["checkingAccountNumber"];
        }
        if( isset($o['checkPhotograph']) ) {
          $this->checkPhotograph = $o["checkPhotograph"];
        }
        if( isset($o['creditCardNumber']) ) {
          $this->creditCardNumber = $o["creditCardNumber"];
        }
        if( isset($o['creditCardName']) ) {
          $this->creditCardName = $o["creditCardName"];
        }
        if( isset($o['CVSCode']) ) {
          $this->CVSCode = $o["CVSCode"];
        }
        if( isset($o['creditCardExpiryDate']) ) {
          $this->creditCardExpiryDate = $o["creditCardExpiryDate"];
        }
        if( isset($o['debitCardNumber']) ) {
          $this->debitCardNumber = $o["debitCardNumber"];
        }
        if( isset($o['debitCardName']) ) {
          $this->debitCardName = $o["debitCardName"];
        }
        if( isset($o['debitCardPin']) ) {
          $this->debitCardPin = $o["debitCardPin"];
        }
        if( isset($o['debitCardExpiryDate']) ) {
          $this->debitCardExpiryDate = $o["debitCardExpiryDate"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Policy.
     */
    class Policy  {
    
    
      /**
       * the policyId
       */
      private $policyId;
      /**
       * the policyType
       */
      private $policyType;
      /**
       * the policyNumber
       */
      private $policyNumber;
      /**
       * the policyEffectiveDate
       */
      private $policyEffectiveDate;
      /**
       * the policyExpirationDate
       */
      private $policyExpirationDate;
      /**
       * the policyPremium
       */
      private $policyPremium;

      /**
       * Constructs a Policy from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the policyId
       */
      public function getPolicyId() {
        return $this->policyId;
      }
      
      /**
       * the policyId
       */
      public function setPolicyId($policyId) {
        $this->policyId = $policyId;
      }
      /**
       * the policyType
       */
      public function getPolicyType() {
        return $this->policyType;
      }
      
      /**
       * the policyType
       */
      public function setPolicyType($policyType) {
        $this->policyType = $policyType;
      }
      /**
       * the policyNumber
       */
      public function getPolicyNumber() {
        return $this->policyNumber;
      }
      
      /**
       * the policyNumber
       */
      public function setPolicyNumber($policyNumber) {
        $this->policyNumber = $policyNumber;
      }
      /**
       * the policyEffectiveDate
       */
      public function getPolicyEffectiveDate() {
        return $this->policyEffectiveDate;
      }
      
      /**
       * the policyEffectiveDate
       */
      public function setPolicyEffectiveDate($policyEffectiveDate) {
        $this->policyEffectiveDate = $policyEffectiveDate;
      }
      /**
       * the policyExpirationDate
       */
      public function getPolicyExpirationDate() {
        return $this->policyExpirationDate;
      }
      
      /**
       * the policyExpirationDate
       */
      public function setPolicyExpirationDate($policyExpirationDate) {
        $this->policyExpirationDate = $policyExpirationDate;
      }
      /**
       * the policyPremium
       */
      public function getPolicyPremium() {
        return $this->policyPremium;
      }
      
      /**
       * the policyPremium
       */
      public function setPolicyPremium($policyPremium) {
        $this->policyPremium = $policyPremium;
      }
      /**
       * Returns the associative array for this Policy
       */
      public function toArray() {
        $a = array();
        if( $this->policyId ) {
          $a["policyId"] = $this->policyId;
        }
        if( $this->policyType ) {
          $a["policyType"] = $this->policyType;
        }
        if( $this->policyNumber ) {
          $a["policyNumber"] = $this->policyNumber;
        }
        if( $this->policyEffectiveDate ) {
          $a["policyEffectiveDate"] = $this->policyEffectiveDate;
        }
        if( $this->policyExpirationDate ) {
          $a["policyExpirationDate"] = $this->policyExpirationDate;
        }
        if( $this->policyPremium ) {
          $a["policyPremium"] = $this->policyPremium;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Policy
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Policy from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['policyId']) ) {
          $this->policyId = $o["policyId"];
        }
        if( isset($o['policyType']) ) {
          $this->policyType = $o["policyType"];
        }
        if( isset($o['policyNumber']) ) {
          $this->policyNumber = $o["policyNumber"];
        }
        if( isset($o['policyEffectiveDate']) ) {
          $this->policyEffectiveDate = $o["policyEffectiveDate"];
        }
        if( isset($o['policyExpirationDate']) ) {
          $this->policyExpirationDate = $o["policyExpirationDate"];
        }
        if( isset($o['policyPremium']) ) {
          $this->policyPremium = $o["policyPremium"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Vehicle.
     */
    class Vehicle  {
    
    
      /**
       * the vehicleId
       */
      private $vehicleId;
      /**
       * the make
       */
      private $make;
      /**
       * the model
       */
      private $model;
      /**
       * the year
       */
      private $year;
      /**
       * the vin
       */
      private $vin;
      /**
       * the licensePlate
       */
      private $licensePlate;
      /**
       * the vehiclePhoto
       */
      private $vehiclePhoto;

      /**
       * Constructs a Vehicle from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the vehicleId
       */
      public function getVehicleId() {
        return $this->vehicleId;
      }
      
      /**
       * the vehicleId
       */
      public function setVehicleId($vehicleId) {
        $this->vehicleId = $vehicleId;
      }
      /**
       * the make
       */
      public function getMake() {
        return $this->make;
      }
      
      /**
       * the make
       */
      public function setMake($make) {
        $this->make = $make;
      }
      /**
       * the model
       */
      public function getModel() {
        return $this->model;
      }
      
      /**
       * the model
       */
      public function setModel($model) {
        $this->model = $model;
      }
      /**
       * the year
       */
      public function getYear() {
        return $this->year;
      }
      
      /**
       * the year
       */
      public function setYear($year) {
        $this->year = $year;
      }
      /**
       * the vin
       */
      public function getVin() {
        return $this->vin;
      }
      
      /**
       * the vin
       */
      public function setVin($vin) {
        $this->vin = $vin;
      }
      /**
       * the licensePlate
       */
      public function getLicensePlate() {
        return $this->licensePlate;
      }
      
      /**
       * the licensePlate
       */
      public function setLicensePlate($licensePlate) {
        $this->licensePlate = $licensePlate;
      }
      /**
       * the vehiclePhoto
       */
      public function getVehiclePhoto() {
        return $this->vehiclePhoto;
      }
      
      /**
       * the vehiclePhoto
       */
      public function setVehiclePhoto($vehiclePhoto) {
        $this->vehiclePhoto = $vehiclePhoto;
      }
      /**
       * Returns the associative array for this Vehicle
       */
      public function toArray() {
        $a = array();
        if( $this->vehicleId ) {
          $a["vehicleId"] = $this->vehicleId;
        }
        if( $this->make ) {
          $a["make"] = $this->make;
        }
        if( $this->model ) {
          $a["model"] = $this->model;
        }
        if( $this->year ) {
          $a["year"] = $this->year;
        }
        if( $this->vin ) {
          $a["vin"] = $this->vin;
        }
        if( $this->licensePlate ) {
          $a["licensePlate"] = $this->licensePlate;
        }
        if( $this->vehiclePhoto ) {
          $a["vehiclePhoto"] = $this->vehiclePhoto;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Vehicle
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Vehicle from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['vehicleId']) ) {
          $this->vehicleId = $o["vehicleId"];
        }
        if( isset($o['make']) ) {
          $this->make = $o["make"];
        }
        if( isset($o['model']) ) {
          $this->model = $o["model"];
        }
        if( isset($o['year']) ) {
          $this->year = $o["year"];
        }
        if( isset($o['vin']) ) {
          $this->vin = $o["vin"];
        }
        if( isset($o['licensePlate']) ) {
          $this->licensePlate = $o["licensePlate"];
        }
        if( isset($o['vehiclePhoto']) ) {
          $this->vehiclePhoto = $o["vehiclePhoto"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class TowingCompany.
     */
    class TowingCompany  {
    
    
      /**
       * the name
       */
      private $name;
      /**
       * the address1
       */
      private $address1;
      /**
       * the address2
       */
      private $address2;
      /**
       * the city
       */
      private $city;
      /**
       * the province
       */
      private $province;
      /**
       * the pinCode
       */
      private $pinCode;
      /**
       * the phone
       */
      private $phone;
      /**
       * the emailId
       */
      private $emailId;

      /**
       * Constructs a TowingCompany from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the name
       */
      public function getName() {
        return $this->name;
      }
      
      /**
       * the name
       */
      public function setName($name) {
        $this->name = $name;
      }
      /**
       * the address1
       */
      public function getAddress1() {
        return $this->address1;
      }
      
      /**
       * the address1
       */
      public function setAddress1($address1) {
        $this->address1 = $address1;
      }
      /**
       * the address2
       */
      public function getAddress2() {
        return $this->address2;
      }
      
      /**
       * the address2
       */
      public function setAddress2($address2) {
        $this->address2 = $address2;
      }
      /**
       * the city
       */
      public function getCity() {
        return $this->city;
      }
      
      /**
       * the city
       */
      public function setCity($city) {
        $this->city = $city;
      }
      /**
       * the province
       */
      public function getProvince() {
        return $this->province;
      }
      
      /**
       * the province
       */
      public function setProvince($province) {
        $this->province = $province;
      }
      /**
       * the pinCode
       */
      public function getPinCode() {
        return $this->pinCode;
      }
      
      /**
       * the pinCode
       */
      public function setPinCode($pinCode) {
        $this->pinCode = $pinCode;
      }
      /**
       * the phone
       */
      public function getPhone() {
        return $this->phone;
      }
      
      /**
       * the phone
       */
      public function setPhone($phone) {
        $this->phone = $phone;
      }
      /**
       * the emailId
       */
      public function getEmailId() {
        return $this->emailId;
      }
      
      /**
       * the emailId
       */
      public function setEmailId($emailId) {
        $this->emailId = $emailId;
      }
      /**
       * Returns the associative array for this TowingCompany
       */
      public function toArray() {
        $a = array();
        if( $this->name ) {
          $a["name"] = $this->name;
        }
        if( $this->address1 ) {
          $a["address1"] = $this->address1;
        }
        if( $this->address2 ) {
          $a["address2"] = $this->address2;
        }
        if( $this->city ) {
          $a["city"] = $this->city;
        }
        if( $this->province ) {
          $a["province"] = $this->province;
        }
        if( $this->pinCode ) {
          $a["pinCode"] = $this->pinCode;
        }
        if( $this->phone ) {
          $a["phone"] = $this->phone;
        }
        if( $this->emailId ) {
          $a["emailId"] = $this->emailId;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this TowingCompany
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this TowingCompany from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['name']) ) {
          $this->name = $o["name"];
        }
        if( isset($o['address1']) ) {
          $this->address1 = $o["address1"];
        }
        if( isset($o['address2']) ) {
          $this->address2 = $o["address2"];
        }
        if( isset($o['city']) ) {
          $this->city = $o["city"];
        }
        if( isset($o['province']) ) {
          $this->province = $o["province"];
        }
        if( isset($o['pinCode']) ) {
          $this->pinCode = $o["pinCode"];
        }
        if( isset($o['phone']) ) {
          $this->phone = $o["phone"];
        }
        if( isset($o['emailId']) ) {
          $this->emailId = $o["emailId"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class PaymentResponse.
     */
    class PaymentResponse  {
    
    
      /**
       * the reponseStatus
       */
      private $reponseStatus;
      /**
       * the responseDescription
       */
      private $responseDescription;

      /**
       * Constructs a PaymentResponse from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the reponseStatus
       */
      public function getReponseStatus() {
        return $this->reponseStatus;
      }
      
      /**
       * the reponseStatus
       */
      public function setReponseStatus($reponseStatus) {
        $this->reponseStatus = $reponseStatus;
      }
      /**
       * the responseDescription
       */
      public function getResponseDescription() {
        return $this->responseDescription;
      }
      
      /**
       * the responseDescription
       */
      public function setResponseDescription($responseDescription) {
        $this->responseDescription = $responseDescription;
      }
      /**
       * Returns the associative array for this PaymentResponse
       */
      public function toArray() {
        $a = array();
        if( $this->reponseStatus ) {
          $a["reponseStatus"] = $this->reponseStatus;
        }
        if( $this->responseDescription ) {
          $a["responseDescription"] = $this->responseDescription;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this PaymentResponse
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this PaymentResponse from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['reponseStatus']) ) {
          $this->reponseStatus = $o["reponseStatus"];
        }
        if( isset($o['responseDescription']) ) {
          $this->responseDescription = $o["responseDescription"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class MessageDetails.
     */
    class MessageDetails  {
    
    
      /**
       * the messageId
       */
      private $messageId;
      /**
       * the messageDetail
       */
      private $messageDetail;

      /**
       * Constructs a MessageDetails from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the messageId
       */
      public function getMessageId() {
        return $this->messageId;
      }
      
      /**
       * the messageId
       */
      public function setMessageId($messageId) {
        $this->messageId = $messageId;
      }
      /**
       * the messageDetail
       */
      public function getMessageDetail() {
        return $this->messageDetail;
      }
      
      /**
       * the messageDetail
       */
      public function setMessageDetail($messageDetail) {
        $this->messageDetail = $messageDetail;
      }
      /**
       * Returns the associative array for this MessageDetails
       */
      public function toArray() {
        $a = array();
        if( $this->messageId ) {
          $a["messageId"] = $this->messageId;
        }
        if( $this->messageDetail ) {
          $a["messageDetail"] = $this->messageDetail;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this MessageDetails
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this MessageDetails from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['messageId']) ) {
          $this->messageId = $o["messageId"];
        }
        if( isset($o['messageDetail']) ) {
          $this->messageDetail = $o["messageDetail"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class FaqDetail.
     */
    class FaqDetail  {
    
    
      /**
       * the faqId
       */
      private $faqId;
      /**
       * the faqDetails
       */
      private $faqDetails;

      /**
       * Constructs a FaqDetail from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the faqId
       */
      public function getFaqId() {
        return $this->faqId;
      }
      
      /**
       * the faqId
       */
      public function setFaqId($faqId) {
        $this->faqId = $faqId;
      }
      /**
       * the faqDetails
       */
      public function getFaqDetails() {
        return $this->faqDetails;
      }
      
      /**
       * the faqDetails
       */
      public function setFaqDetails($faqDetails) {
        $this->faqDetails = $faqDetails;
      }
      /**
       * Returns the associative array for this FaqDetail
       */
      public function toArray() {
        $a = array();
        if( $this->faqId ) {
          $a["faqId"] = $this->faqId;
        }
        if( $this->faqDetails ) {
          $a["faqDetails"] = $this->faqDetails;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this FaqDetail
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this FaqDetail from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['faqId']) ) {
          $this->faqId = $o["faqId"];
        }
        if( isset($o['faqDetails']) ) {
          $this->faqDetails = $o["faqDetails"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Coverage.
     */
    class Coverage  {
    
    
      /**
       * the coverageId
       */
      private $coverageId;
      /**
       * the coverageTypeId
       */
      private $coverageTypeId;
      /**
       * the coverageAmount
       */
      private $coverageAmount;
      /**
       * the coverageLimit
       */
      private $coverageLimit;
      /**
       * the deductible
       */
      private $deductible;

      /**
       * Constructs a Coverage from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the coverageId
       */
      public function getCoverageId() {
        return $this->coverageId;
      }
      
      /**
       * the coverageId
       */
      public function setCoverageId($coverageId) {
        $this->coverageId = $coverageId;
      }
      /**
       * the coverageTypeId
       */
      public function getCoverageTypeId() {
        return $this->coverageTypeId;
      }
      
      /**
       * the coverageTypeId
       */
      public function setCoverageTypeId($coverageTypeId) {
        $this->coverageTypeId = $coverageTypeId;
      }
      /**
       * the coverageAmount
       */
      public function getCoverageAmount() {
        return $this->coverageAmount;
      }
      
      /**
       * the coverageAmount
       */
      public function setCoverageAmount($coverageAmount) {
        $this->coverageAmount = $coverageAmount;
      }
      /**
       * the coverageLimit
       */
      public function getCoverageLimit() {
        return $this->coverageLimit;
      }
      
      /**
       * the coverageLimit
       */
      public function setCoverageLimit($coverageLimit) {
        $this->coverageLimit = $coverageLimit;
      }
      /**
       * the deductible
       */
      public function getDeductible() {
        return $this->deductible;
      }
      
      /**
       * the deductible
       */
      public function setDeductible($deductible) {
        $this->deductible = $deductible;
      }
      /**
       * Returns the associative array for this Coverage
       */
      public function toArray() {
        $a = array();
        if( $this->coverageId ) {
          $a["coverageId"] = $this->coverageId;
        }
        if( $this->coverageTypeId ) {
          $a["coverageTypeId"] = $this->coverageTypeId;
        }
        if( $this->coverageAmount ) {
          $a["coverageAmount"] = $this->coverageAmount;
        }
        if( $this->coverageLimit ) {
          $a["coverageLimit"] = $this->coverageLimit;
        }
        if( $this->deductible ) {
          $a["deductible"] = $this->deductible;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Coverage
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Coverage from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['coverageId']) ) {
          $this->coverageId = $o["coverageId"];
        }
        if( isset($o['coverageTypeId']) ) {
          $this->coverageTypeId = $o["coverageTypeId"];
        }
        if( isset($o['coverageAmount']) ) {
          $this->coverageAmount = $o["coverageAmount"];
        }
        if( isset($o['coverageLimit']) ) {
          $this->coverageLimit = $o["coverageLimit"];
        }
        if( isset($o['deductible']) ) {
          $this->deductible = $o["deductible"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class BodyShop.
     */
    class BodyShop  {
    
    
      /**
       * the name
       */
      private $name;
      /**
       * the address1
       */
      private $address1;
      /**
       * the address2
       */
      private $address2;
      /**
       * the city
       */
      private $city;
      /**
       * the province
       */
      private $province;
      /**
       * the pinCode
       */
      private $pinCode;
      /**
       * the phone
       */
      private $phone;
      /**
       * the emailId
       */
      private $emailId;

      /**
       * Constructs a BodyShop from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the name
       */
      public function getName() {
        return $this->name;
      }
      
      /**
       * the name
       */
      public function setName($name) {
        $this->name = $name;
      }
      /**
       * the address1
       */
      public function getAddress1() {
        return $this->address1;
      }
      
      /**
       * the address1
       */
      public function setAddress1($address1) {
        $this->address1 = $address1;
      }
      /**
       * the address2
       */
      public function getAddress2() {
        return $this->address2;
      }
      
      /**
       * the address2
       */
      public function setAddress2($address2) {
        $this->address2 = $address2;
      }
      /**
       * the city
       */
      public function getCity() {
        return $this->city;
      }
      
      /**
       * the city
       */
      public function setCity($city) {
        $this->city = $city;
      }
      /**
       * the province
       */
      public function getProvince() {
        return $this->province;
      }
      
      /**
       * the province
       */
      public function setProvince($province) {
        $this->province = $province;
      }
      /**
       * the pinCode
       */
      public function getPinCode() {
        return $this->pinCode;
      }
      
      /**
       * the pinCode
       */
      public function setPinCode($pinCode) {
        $this->pinCode = $pinCode;
      }
      /**
       * the phone
       */
      public function getPhone() {
        return $this->phone;
      }
      
      /**
       * the phone
       */
      public function setPhone($phone) {
        $this->phone = $phone;
      }
      /**
       * the emailId
       */
      public function getEmailId() {
        return $this->emailId;
      }
      
      /**
       * the emailId
       */
      public function setEmailId($emailId) {
        $this->emailId = $emailId;
      }
      /**
       * Returns the associative array for this BodyShop
       */
      public function toArray() {
        $a = array();
        if( $this->name ) {
          $a["name"] = $this->name;
        }
        if( $this->address1 ) {
          $a["address1"] = $this->address1;
        }
        if( $this->address2 ) {
          $a["address2"] = $this->address2;
        }
        if( $this->city ) {
          $a["city"] = $this->city;
        }
        if( $this->province ) {
          $a["province"] = $this->province;
        }
        if( $this->pinCode ) {
          $a["pinCode"] = $this->pinCode;
        }
        if( $this->phone ) {
          $a["phone"] = $this->phone;
        }
        if( $this->emailId ) {
          $a["emailId"] = $this->emailId;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this BodyShop
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this BodyShop from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['name']) ) {
          $this->name = $o["name"];
        }
        if( isset($o['address1']) ) {
          $this->address1 = $o["address1"];
        }
        if( isset($o['address2']) ) {
          $this->address2 = $o["address2"];
        }
        if( isset($o['city']) ) {
          $this->city = $o["city"];
        }
        if( isset($o['province']) ) {
          $this->province = $o["province"];
        }
        if( isset($o['pinCode']) ) {
          $this->pinCode = $o["pinCode"];
        }
        if( isset($o['phone']) ) {
          $this->phone = $o["phone"];
        }
        if( isset($o['emailId']) ) {
          $this->emailId = $o["emailId"];
        }
      }
    
    }
    
  }


  namespace Com\Ibm\Openinsurance\Domain {

    /**
     * The Class Billing.
     */
    class Billing  {
    
    
      /**
       * the policyId
       */
      private $policyId;
      /**
       * the policyBalance
       */
      private $policyBalance;
      /**
       * the lastPaymentDate
       */
      private $lastPaymentDate;
      /**
       * the amountBalance
       */
      private $amountBalance;

      /**
       * Constructs a Billing from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * the policyId
       */
      public function getPolicyId() {
        return $this->policyId;
      }
      
      /**
       * the policyId
       */
      public function setPolicyId($policyId) {
        $this->policyId = $policyId;
      }
      /**
       * the policyBalance
       */
      public function getPolicyBalance() {
        return $this->policyBalance;
      }
      
      /**
       * the policyBalance
       */
      public function setPolicyBalance($policyBalance) {
        $this->policyBalance = $policyBalance;
      }
      /**
       * the lastPaymentDate
       */
      public function getLastPaymentDate() {
        return $this->lastPaymentDate;
      }
      
      /**
       * the lastPaymentDate
       */
      public function setLastPaymentDate($lastPaymentDate) {
        $this->lastPaymentDate = $lastPaymentDate;
      }
      /**
       * the amountBalance
       */
      public function getAmountBalance() {
        return $this->amountBalance;
      }
      
      /**
       * the amountBalance
       */
      public function setAmountBalance($amountBalance) {
        $this->amountBalance = $amountBalance;
      }
      /**
       * Returns the associative array for this Billing
       */
      public function toArray() {
        $a = array();
        if( $this->policyId ) {
          $a["policyId"] = $this->policyId;
        }
        if( $this->policyBalance ) {
          $a["policyBalance"] = $this->policyBalance;
        }
        if( $this->lastPaymentDate ) {
          $a["lastPaymentDate"] = $this->lastPaymentDate;
        }
        if( $this->amountBalance ) {
          $a["amountBalance"] = $this->amountBalance;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Billing
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Billing from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['policyId']) ) {
          $this->policyId = $o["policyId"];
        }
        if( isset($o['policyBalance']) ) {
          $this->policyBalance = $o["policyBalance"];
        }
        if( isset($o['lastPaymentDate']) ) {
          $this->lastPaymentDate = $o["lastPaymentDate"];
        }
        if( isset($o['amountBalance']) ) {
          $this->amountBalance = $o["amountBalance"];
        }
      }
    
    }
    
  }

  
?>