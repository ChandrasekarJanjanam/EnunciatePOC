/**
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 */
package com.ibm.openinsurance.policies.api.impl;

import com.ibm.openinsurance.policies.api.PaymentService;

/**
 * Implementation of the {@link PaymentService}.
 */
public class PaymentServiceImpl implements PaymentService {

  private final PaymentService proxy;

  /**
   * Construct a PaymentService that points to the default endpoint ("http://localhost:8080/openinsurance/soap/PaymentServiceService").
   *
   * @param features The features to include (e.g. MTOM).
   */
  public PaymentServiceImpl(javax.xml.ws.WebServiceFeature... features) {
    this("http://localhost:8080/openinsurance/soap/PaymentServiceService", features);
  }

  /**
   * Construct a PaymentService that points to the endpoint at the specified host and port.
   *
   * @param host The host.
   * @param port The port.
   * @param features The features (e.g. MTOM).
   */
  public PaymentServiceImpl(String host, int port, javax.xml.ws.WebServiceFeature... features) {
    this.proxy = javax.xml.ws.spi.Provider.provider().createServiceDelegate(getClass().getResource("/api.wsdl"), new javax.xml.namespace.QName("http://api.policies.openinsurance.ibm.com/", "PaymentServiceService"), javax.xml.ws.Service.class).getPort(PaymentService.class, features);
    try {
      java.net.URL baseUrl = new java.net.URL("http://localhost:8080/openinsurance/soap/PaymentServiceService");
      _getBindingProvider().getRequestContext().put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, new java.net.URL(baseUrl.getProtocol(), host, port, baseUrl.getFile()).toString());
    }
    catch (java.net.MalformedURLException e) {
      throw new IllegalStateException(e);
    }
  }

  /**
   * Construct a PaymentService that points to the specified endpoint.
   *
   * @param endpoint The endpoint to point to.
   * @param features The features (e.g. MTOM).
   */
  public PaymentServiceImpl(String endpoint, javax.xml.ws.WebServiceFeature... features) {
    this.proxy = javax.xml.ws.spi.Provider.provider().createServiceDelegate(getClass().getResource("/api.wsdl"), new javax.xml.namespace.QName("http://api.policies.openinsurance.ibm.com/", "PaymentServiceService"), javax.xml.ws.Service.class).getPort(PaymentService.class, features);
    _getBindingProvider().getRequestContext().put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, endpoint);
  }

  /**
   * Get the binding provider supporting this service.
   */
  public javax.xml.ws.BindingProvider _getBindingProvider() {
    return (javax.xml.ws.BindingProvider) this.proxy;
  }


  // Inherited.
  public com.ibm.openinsurance.domain.Billing getPaymentInformation(java.lang.String policyId)  {
    return proxy.getPaymentInformation(policyId); 
  }

  // Inherited.
  public com.ibm.openinsurance.domain.PaymentResponse doCheckPayment(java.lang.String policyId, java.lang.String userId, java.lang.String routingNumber, java.lang.String checkingAccount, java.lang.String amount)  {
    return proxy.doCheckPayment(policyId, userId, routingNumber, checkingAccount, amount); 
  }

  // Inherited.
  public com.ibm.openinsurance.domain.PaymentResponse doCreditPayment(java.lang.String policyId, java.lang.String userId, java.lang.String userName, java.lang.String creditCardNumber, java.lang.String cvsCode, java.lang.String expiryDate, java.lang.String amount)  {
    return proxy.doCreditPayment(policyId, userId, userName, creditCardNumber, cvsCode, expiryDate, amount); 
  }

  // Inherited.
  public com.ibm.openinsurance.domain.PaymentResponse doDebitPayment(java.lang.String policyId, java.lang.String userId, java.lang.String userName, java.lang.String debitCardNumber, java.lang.String pin, java.lang.String expiryDate, java.lang.String amount)  {
    return proxy.doDebitPayment(policyId, userId, userName, debitCardNumber, pin, expiryDate, amount); 
  }
}
